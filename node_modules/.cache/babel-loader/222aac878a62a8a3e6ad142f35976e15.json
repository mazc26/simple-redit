{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport monitorReducersEnhancer from './enhancers/monitorReducers';\nimport loggerMiddleware from './middleware/logger';\nimport rootEpic from './middleware/epics';\nimport rootReducer from './reducers';\nconst epicMiddleware = createEpicMiddleware();\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [loggerMiddleware, epicMiddleware, ...getDefaultMiddleware({\n      thunk: false\n    })],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  });\n  epicMiddleware.run(rootEpic);\n  /* eslint-disable no-undef */\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n  }\n  /* eslint-enable no-undef */\n\n\n  return store;\n}","map":{"version":3,"sources":["/Users/manuelzapata/Documents/simple-redit/src/store/configureAppStore.js"],"names":["configureStore","getDefaultMiddleware","createEpicMiddleware","monitorReducersEnhancer","loggerMiddleware","rootEpic","rootReducer","epicMiddleware","configureAppStore","preloadedState","store","reducer","middleware","thunk","enhancers","run","process","env","NODE_ENV","module","hot","accept","replaceReducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,OAAOC,uBAAP,MAAoC,6BAApC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,eAAe,SAASM,iBAAT,CAA2BC,cAA3B,EAA2C;AACxD,QAAMC,KAAK,GAAGV,cAAc,CAAC;AAC3BW,IAAAA,OAAO,EAAEL,WADkB;AAE3BM,IAAAA,UAAU,EAAE,CACVR,gBADU,EAEVG,cAFU,EAGV,GAAGN,oBAAoB,CAAC;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAAD,CAHb,CAFe;AAO3BJ,IAAAA,cAP2B;AAQ3BK,IAAAA,SAAS,EAAE,CAACX,uBAAD;AARgB,GAAD,CAA5B;AAWAI,EAAAA,cAAc,CAACQ,GAAf,CAAmBV,QAAnB;AAEA;;AACA,MAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,MAAM,CAACC,GAApD,EAAyD;AACvDD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAMX,KAAK,CAACY,cAAN,CAAqBhB,WAArB,CAAtC;AACD;AACD;;;AAEA,SAAOI,KAAP;AACD","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { createEpicMiddleware } from 'redux-observable'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducers'\nimport loggerMiddleware from './middleware/logger'\nimport rootEpic from './middleware/epics'\nimport rootReducer from './reducers'\n\nconst epicMiddleware = createEpicMiddleware()\n\nexport default function configureAppStore(preloadedState) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [\n      loggerMiddleware,\n      epicMiddleware,\n      ...getDefaultMiddleware({ thunk: false })\n    ],\n    preloadedState,\n    enhancers: [monitorReducersEnhancer]\n  })\n\n  epicMiddleware.run(rootEpic)\n  \n  /* eslint-disable no-undef */\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n  /* eslint-enable no-undef */\n\n  return store\n}"]},"metadata":{},"sourceType":"module"}