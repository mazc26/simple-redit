{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nlet initialState = {\n  posts: [],\n  readPosts: [],\n  expandedInfo: {},\n  isFetchingPosts: false\n};\nconst commonSlice = createSlice({\n  name: 'common',\n  initialState,\n  reducers: {\n    fetchPosts(state) {\n      state.isFetchingPosts = true;\n    },\n\n    fetchPostsSuccess(state, action) {\n      state.isFetchingPosts = false;\n      state.posts = action.payload.data.data.children;\n    },\n\n    fetchPostsError(state, action) {\n      state.isFetchingPosts = false;\n      state.error = action.payload.data;\n    },\n\n    setReadStatus(state, action) {\n      state.readPosts = [...state.readPosts, action.payload];\n    }\n\n  }\n});\nexport const {\n  fetchPosts,\n  fetchPostsSuccess,\n  fetchPostsError,\n  setReadStatus\n} = commonSlice.actions;\nexport default commonSlice.reducer;","map":{"version":3,"sources":["/Users/manuelzapata/Documents/simple-redit/src/store/reducers/common.js"],"names":["createSlice","initialState","posts","readPosts","expandedInfo","isFetchingPosts","commonSlice","name","reducers","fetchPosts","state","fetchPostsSuccess","action","payload","data","children","fetchPostsError","error","setReadStatus","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,YAAY,EAAE,EAHG;AAIjBC,EAAAA,eAAe,EAAE;AAJA,CAAnB;AAOA,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,QADwB;AAE9BN,EAAAA,YAF8B;AAG9BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAIRM,IAAAA,iBAAiB,CAACD,KAAD,EAAQE,MAAR,EAAgB;AAC/BF,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AACAK,MAAAA,KAAK,CAACR,KAAN,GAAcU,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBA,IAApB,CAAyBC,QAAvC;AACD,KAPO;;AAQRC,IAAAA,eAAe,CAACN,KAAD,EAAQE,MAAR,EAAgB;AAC7BF,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AACAK,MAAAA,KAAK,CAACO,KAAN,GAAcL,MAAM,CAACC,OAAP,CAAeC,IAA7B;AACD,KAXO;;AAYRI,IAAAA,aAAa,CAACR,KAAD,EAAQE,MAAR,EAAgB;AAC3BF,MAAAA,KAAK,CAACP,SAAN,GAAkB,CAAC,GAAGO,KAAK,CAACP,SAAV,EAAqBS,MAAM,CAACC,OAA5B,CAAlB;AACD;;AAdO;AAHoB,CAAD,CAA/B;AAqBA,OAAO,MAAM;AACXJ,EAAAA,UADW;AAEXE,EAAAA,iBAFW;AAGXK,EAAAA,eAHW;AAIXE,EAAAA;AAJW,IAKTZ,WAAW,CAACa,OALT;AAOP,eAAeb,WAAW,CAACc,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nlet initialState = {\n  posts: [],\n  readPosts: [],\n  expandedInfo: {},\n  isFetchingPosts: false,\n}\n\nconst commonSlice = createSlice({\n  name: 'common',\n  initialState,\n  reducers: {\n    fetchPosts(state) {\n      state.isFetchingPosts = true;\n    },\n    fetchPostsSuccess(state, action) {\n      state.isFetchingPosts = false;\n      state.posts = action.payload.data.data.children;\n    },\n    fetchPostsError(state, action) {\n      state.isFetchingPosts = false;\n      state.error = action.payload.data;\n    },\n    setReadStatus(state, action) {\n      state.readPosts = [...state.readPosts, action.payload]\n    }\n  }\n})\n\nexport const { \n  fetchPosts,\n  fetchPostsSuccess,\n  fetchPostsError,\n  setReadStatus,\n} = commonSlice.actions\n\nexport default commonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}